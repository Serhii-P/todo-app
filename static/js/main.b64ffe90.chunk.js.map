{"version":3,"sources":["components/Form.js","components/TodoItem.js","components/TodoList.js","components/Count.js","constants/date.js","components/FilterButton.js","App.js","index.js"],"names":["Form","props","useState","enteredValue","setEnteredValue","enteredTitleIsValid","setEnteredTitleIsValid","nameInputClasses","className","onSubmit","event","preventDefault","trim","onSaveUserValue","type","placeholder","onChange","target","value","TodoItem","id","title","completed","onDeleteItem","onCompleted","onEditItem","isEditing","setEditing","newTitle","setNewTitle","escFunction","useCallback","e","key","keyCode","useEffect","document","addEventListener","removeEventListener","addNewText","checkboxMark","checked","toggleCompleteHandler","onDoubleClick","activateEditing","onClick","deleteItemHandler","onBlur","TodoList","listOfTodos","FILTER_MAP","filter","itemDeleteHandler","completeHandler","itemEditHandler","map","item","Count","counter","currentDay","date","dd","getDate","mm","getMonth","getFullYear","formatDate","Date","FilterButton","name","isPressed","setFilter","selectedLink","All","Active","task","Completed","FILTER_NAMES","Object","keys","App","initialTitle","setInitialTitle","setCounter","newList","count","length","userInputValue","wholeUserEneteredData","Math","random","toString","prevInitialTitle","htmlFor","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b64ffe90.chunk.js","sourcesContent":["import React, {useState} from 'react';\n\nconst Form = (props) => {\n    const [enteredValue, setEnteredValue] = useState('');\n    const [enteredTitleIsValid, setEnteredTitleIsValid] = useState(false);\n\n    const inputChangeHandler = (event) => {\n        setEnteredValue(event.target.value);\n\n        if (event.target.value.trim() !== '') {\n            setEnteredTitleIsValid(false);\n        } \n    }\n\n    const formSubmitHandler = (event) => {\n        event.preventDefault();\n  \n        if (enteredValue.trim() === '') {\n            setEnteredTitleIsValid(true);\n            return;\n        } \n\n        props.onSaveUserValue(enteredValue.trim());\n        setEnteredTitleIsValid(false);\n        setEnteredValue('');\n    }\n\nconst nameInputClasses = enteredTitleIsValid \n    ? 'form-control invalid' \n    : 'form-control ';\n\n    return (\n        <div>\n            <form className={nameInputClasses} onSubmit={formSubmitHandler}>\n                <input\n                    type=\"text\"\n                    className=\"new-todo\"\n                    placeholder=\"What needs to be done?\"\n                    onChange={inputChangeHandler}\n                    value={enteredValue}\n                />\n            </form>\n        </div>\n    )\n}\n\nexport default Form;","import React, {useState, useEffect, useCallback} from 'react';\n\nconst TodoItem = ({\n    id, \n    title, \n    completed, \n    onDeleteItem, \n    onCompleted,\n    onEditItem}) => {\n    const [isEditing, setEditing] = useState(false);\n    const [newTitle, setNewTitle] = useState(title);\n\n    \n    const toggleCompleteHandler = (id) => {\n        onCompleted(id)\n    }\n\n    const deleteItemHandler = (id) => {\n        onDeleteItem(id);\n    }\n\n    const editNewTitleHandler = (e) => {\n        setNewTitle(e.target.value);\n    }\n\n\n    const escFunction = useCallback((e) => {\n        if (e.key==='Escape'||e.key==='Esc'||e.keyCode===27) {\n          setEditing(false);\n\n        }\n      }, []);\n    \n      useEffect(() => {\n        document.addEventListener(\"keydown\", escFunction);\n    \n        return () => {\n          document.removeEventListener(\"keydown\", escFunction);\n        };\n      }, [escFunction]);\n\n\n    const activateEditing = (id, newTitle, e) => {\n        if(completed) {\n            return;\n        }\n        setEditing(true);\n        setNewTitle(newTitle);\n\n    }\n\n    const addNewText = (e) => {\n        e.preventDefault();\n\n        setEditing(false);\n        onEditItem(id, newTitle);\n    }\n\n    const tagClassToggle = () => {\n        if(completed) {\n            return 'completed';\n        } else if (isEditing) {\n            return 'editing';\n        } else {\n            return '';\n        }\n    }\n   \n    const checkboxMark = completed ? true : false;\n    \n    return (\n        <>\n           <li  className={tagClassToggle()}>\n                <div className=\"view\">\n                    <input \n                        type=\"checkbox\" \n                        className=\"toggle\" \n                        checked={checkboxMark}\n                        onChange={() => toggleCompleteHandler(id)}\n                       \n                    />\n                    <label onDoubleClick={(e) => activateEditing(id, newTitle, e)}>\n                        {title}\n                    </label>\n                    <button \n                        type=\"button\" \n                        className=\"destroy\" \n                        onClick={() => deleteItemHandler(id)}\n                        \n                    />\n                </div>\n                <form onSubmit={addNewText} onBlur={addNewText}\n                >\n                    \n                <input \n                    type=\"text\" \n                    className=\"edit\"  \n                    value={newTitle}\n                    onChange={editNewTitleHandler}\n                    // onKeyPress={(e) => keyEnterPress(e)}\n                />\n                </form>\n            </li>\n\n             \n        </>\n    )\n}\n\nexport default TodoItem;","import React from 'react';\nimport TodoItem from './TodoItem';\n\nconst TodoList = ({\n    listOfTodos, \n    onDeleteItem, \n    onCompleted, \n    onEditItem,\n    FILTER_MAP,\n    filter\n    }) => {\n\n    const itemDeleteHandler = (id) => {\n        onDeleteItem(id);\n    }\n\n    const completeHandler = (id) => {\n        onCompleted(id);\n    }\n\n    const itemEditHandler = (id, newTitle) => {\n        // console.log(title)\n\n        onEditItem(id, newTitle);\n    }\n\n    return (\n        <div>\n            <ul className=\"todo-list\">\n                {listOfTodos\n                .filter(FILTER_MAP[filter])\n                .map( item => ( \n                    <TodoItem \n                        key={item.id}\n                        id={item.id} \n                        title={item.title} \n                        completed={item.completed}\n                        onDeleteItem={itemDeleteHandler}\n                        onCompleted={completeHandler}\n                        onEditItem={itemEditHandler}\n                        // onDoubleClick={() => console.log(123)}\n                    />\n                ))}\n\n            </ul>\n        </div>\n    )\n}\n\nexport default TodoList;","import React from 'react';\n\nconst Count = ({counter}) => {\n\n    return (\n        <>\n          <span className=\"todo-count\">\n          {counter} items left\n          </span>\n        </>\n    )\n}\n\nexport default Count;","\n  const today = new Date();\n\nfunction formatDate(date) {\n    let dd = date.getDate();\n    let mm = date.getMonth() + 1;\n    let yyyy = date.getFullYear();\n    if (dd < 10) {\n      dd = '0' + dd;\n    }\n    if (mm < 10) {\n      mm = '0' + mm;\n    }\n      return dd + '.' + mm + '.' +yyyy ;\n  }\n\n  export const currentDay = formatDate(today);\n\n//   export default currentDay; ","import React from 'react';\n\nconst FilterButton = ({name, isPressed, setFilter}) => {\n\n\nconst selectedLink = isPressed ? 'selected' : '';\n\n    return (\n        <>\n            <li> \n                <button \n                    className={selectedLink} \n                    onClick={() => setFilter(name)}\n                >\n                    {name}\n                </button>\n            </li>\n        </>\n    )\n}\n\nexport default FilterButton;","import React, {useState, useEffect} from 'react';\nimport Form from './components/Form';\nimport TodoList from './components/TodoList';\nimport Count from './components/Count';\nimport {currentDay} from './constants/date';\nimport FilterButton from './components/FilterButton';\n\n\n// https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_interactivity_events_state\n\nconst FILTER_MAP = {\n  All: () => true,\n  Active: task => !task.completed,\n  Completed: task => task.completed\n}\n\nconst FILTER_NAMES = Object.keys(FILTER_MAP);\n\n\nfunction App() {\n\nconst [initialTitle, setInitialTitle] = useState([]);\nconst [counter, setCounter] = useState(0);\nconst [filter, setFilter] = useState('All');\n\nconst receivedInputHandler = (userInputValue) => {\n\nconst wholeUserEneteredData = {\n  id: currentDay + Math.random().toString(),\n  // date: currentDay,\n  title: userInputValue,\n  completed: false\n}\n\n  setInitialTitle(\n    prevInitialTitle => {\n      return [...prevInitialTitle, wholeUserEneteredData];\n    }\n  )\n}\n\n\nconst itemDeleteHandler = (id) => {\n  \n  const newList = initialTitle.filter((item) => item.id !== id);\n \n  setInitialTitle(newList);\n}\n\nconst clearCompleteHandler = () => {\n  const newList = initialTitle.filter(item  => !item.completed);\n  setInitialTitle(newList);\n}\n// --------------\nfunction completeHandler(id) {\n  const newList = initialTitle.map(task => {\n    if (id === task.id) {\n      return {...task, completed: !task.completed}\n    }\n\n    return task;\n  });\n  setInitialTitle(newList);\n}\n\nconst itemEditHandler = (id, newTitle) => {\n\n  const newList = initialTitle.map(task => {\n    if (id === task.id) {\n      return {...task, title: newTitle}\n    }\n  \n    return task;\n  });\n\n  setInitialTitle(newList);\n}\n  \n  useEffect(() => {\n    const newList = initialTitle.filter((item) => item.completed === true);\n    const count = initialTitle.length - newList.length;\n    setCounter(count);\n  }, [initialTitle]);\n  \n  const completedAllHandler = () => {\n\n    const newList = initialTitle.map(item => {\n      return {...item, completed: true}\n    })\n\n    setInitialTitle( newList )\n  }\n\n  return (\n    <section className=\"todoapp\">\n    <header className=\"header\">\n      <h1>todos</h1>\n\n      <Form onSaveUserValue={receivedInputHandler}/>\n\n    </header>\n\n    <section className=\"main\">\n      <input \n        type=\"checkbox\" \n        id=\"toggle-all\" \n        className=\"toggle-all\" \n        onClick={completedAllHandler}\n      />\n      <label htmlFor=\"toggle-all\">Mark all as complete</label>\n\n      <TodoList \n        listOfTodos={initialTitle} \n        onDeleteItem={itemDeleteHandler}\n        onCompleted={completeHandler}\n        onEditItem={itemEditHandler}\n        FILTER_MAP={FILTER_MAP}\n        filter={filter}\n      />\n    </section>\n{initialTitle && initialTitle.length > 0 &&\n    <footer className=\"footer\">\n      <Count counter={counter}/>\n    \n      <ul className=\"filters\">\n        {FILTER_NAMES.map(name => (\n          <FilterButton \n            key={name}\n            name={name}\n            isPressed={name === filter}\n            setFilter={setFilter}\n          />\n        ))}\n      </ul>\n\n      <button \n        type=\"button\" \n        className=\"clear-completed\" \n        onClick={clearCompleteHandler}>\n        Clear completed\n      </button>\n    </footer>\n}\n  </section>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport './styles/todo-list.css';\nimport './styles/filters.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}